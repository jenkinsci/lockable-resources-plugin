<!--
The MIT License

Copyright 2022 Martin Pokorny.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
-->
<?jelly escape-by-default='true'?>
<j:jelly
  xmlns:j="jelly:core"
  xmlns:l="/lib/layout"
  xmlns:f="/lib/form"
  xmlns:i="jelly:fmt"
  xmlns:st="jelly:stapler"
  >
  <st:adjunct includes="io.jenkins.plugins.data-tables"/>

  <link rel="stylesheet" href="${resURL}/plugin/lockable-resources/css/style.css"/>

  <div class="table-responsive">
    <table
      class="jenkins-table jenkins-!-margin-bottom-4 data-table"
      id="lockable-resources"
      data-remember-search-text="true"
      isLoaded="true"
      data-columns-definition="[null, null, null, null, null, null, null]"
      data-table-configuration='
      {
        "responsive": {
          "details": {
            "type": "column"
          }
        },
        "columnDefs": [
            { "targets": "index", "className": "dt-control" },
            { "targets": "properties", "visible": false }
        ],
        "order": [ 0, "asc" ],
        "stateSave": true
      }'
    >
      <colgroup>
        <!-- index -->
        <col class="text-end" />
        <!-- resouce -->
        <col class="width-100 text-end" />
        <!-- status -->
        <col class="width-100 text-end" />
        <!-- timestamp -->
        <col class="width-100 text-end" />
        <!-- labels -->
        <col class="width-100 text-end" />
        <!-- properties -->
        <col class="width-100 text-end" />
        <!-- actions -->
        <col action="width-100 text-end" />
      </colgroup>
      <thead>
        <th data-class-name="index">${%resources.table.column.index}</th>
        <th data-class-name="resource">${%resources.table.column.resource}</th>
        <th data-class-name="status">${%resources.table.column.status}</th>
        <th data-class-name="timestamp">${%resources.table.column.timestamp}</th>
        <th data-class-name="labels">${%resources.table.column.labels}</th>
        <th data-class-name="properties">${%resources.table.column.properties}</th>
        <th data-class-name="action">${%resources.table.column.action}</th>
      </thead>
      <tbody>
        <j:forEach var="resource" items="${it.resources}" varStatus="idx">
          <tr data-resource-name="${resource.name}">
            <!-- **************************************************************
                 Index
            -->
            <td>${idx.index + 1}</td>

            <!-- **************************************************************
                 Column with common resource data
            -->
            <td>
              <div class="row justify-content-end">
                <div class="col-auto">
                  <strong>${resource.name}</strong>
                </div>
                <div class="col">
                  <j:if test="${resource.ephemeral}">
                    <span class="static-label">${%resources.ephemeral}</span>
                  </j:if>
                </div>
                <div class="col-auto jenkins-!-margin-right-2">
                  <l:hasPermission permission="${it.RESERVE}">
                    <a class="jenkins-table__link" id="note-link" href="editNote" onclick="return replaceNote(this, '${resource.name}');">
                      <l:icon class="symbol-edit-note icon-sm" />
                      ${%btn.editNote}
                    </a>
                  </l:hasPermission>
                </div>
              <!-- this does not look good when we use bootstrap5
                <l:copyButton message="${%btn.copy.message}" text="${resource.name}" tooltip="${%btn.copy.detail}"/>
              -->
              </div>
              <j:if test="${resource.description != null and !resource.description.isEmpty()}">
                <div class="row">
                  <div class="col">
                    ${resource.description}
                  </div>
                </div>
              </j:if>
              <div class="row">
                <div id="note-${resource.name}">
                  <j:if test="${resource.note != null and !resource.note.isEmpty()}">
                  <div class="note-wrapper jenkins-!-padding-2 jenkins-!-margin-right-1 overflow-auto">
                    <j:out value="${resource.note !=null ? app.markupFormatter.translate(resource.note) : ''}"/>
                  </div>
                  </j:if>
                </div>
              </div>
            </td>


            <!-- **************************************************************
                 Status column
            -->
            <j:set var="cssClass" value=""/>
            <j:choose>
            <!-- Reserved by user, config or API.
                 It differs to lock() or `queue` that this must be unreserve by some action.
                 This kind is dangeresous, because it might leads to long blockage.
                 Therefore we use `danger`color here.
            -->
              <j:when test="${resource.reservedBy != null}">
                <j:set var="cssClass" value="destructive"/>
              </j:when>
            <!-- Locked by job. This will be unlock automatically (I hope)
                 Therefore use `warning`only
            -->
              <j:when test="${resource.locked}">
                <j:set var="cssClass" value="warning"/>
              </j:when>
            <!-- Queued by matrix-job. This will be unlock automatically (I hope)
                 Therefore use `warning`only
            -->
              <j:when test="${resource.queued}">
                <j:set var="cssClass" value="warning"/>
              </j:when>
            <!-- Resource is (or it looks so) fre
            -->
              <j:otherwise>
                <j:set var="cssClass" value="success"/>
              </j:otherwise>
            </j:choose>

            <td class="jenkins-!-${cssClass}-color">
              <j:choose>
            <!-- Reserved by user, config or API.
                 It differs to lock() or `queue` that this must be unreserve by some action.
                 This kind is dangeresous, because it might leads to long blockage.
                 Therefore we use `danger`color here.
            -->
              <j:when test="${resource.reservedBy != null}">
                ${%resource.status.reservedBy(resource.reservedBy)}
              </j:when>
            <!-- Locked by job. This will be unlock automatically (I hope)
                 Therefore use `warning`only
            -->
              <j:when test="${resource.locked}">
                ${%resource.status.locked(rootURL + '/' + resource.build.url, resource.build.fullDisplayName)}
              </j:when>
            <!-- Queued by matrix-job. This will be unlock automatically (I hope)
                 Therefore use `warning`only
            -->
              <j:when test="${resource.queued}">
                ${%resource.status.queuedBy(resource.queueItemProject, resource.queueItemId)}
              </j:when>
            <!-- Resource is (or it looks so) free
            -->
              <j:otherwise>
                ${%resource.status.free}
              </j:otherwise>
            </j:choose>

            <!-- add timestamp when possible -->
              <j:if test="${resource.reservedTimestamp != null}">
                <br />
                ${%ago(h.getTimeSpanString(resource.reservedTimestamp))}
              </j:if>
            </td>


            <!-- **************************************************************
                 Reserved / locked timestamp column
            -->
            <j:choose>
              <j:when test="${resource.reservedTimestamp != null}">
                <td data-order="${logEntry.getDate().getTime()}">
                  <i:formatDate
                    value="${resource.reservedTimestamp}"
                    type="both"
                    dateStyle="medium"
                    timeStyle="short"
                  />
                </td>
              </j:when>
              <j:otherwise>
                <td></td>
              </j:otherwise>
            </j:choose>


            <!-- **************************************************************
                 Labels column
            -->
            <td>
              <!--todo replace it by getLabelsAsList() -->
              <j:forEach var="label" items="${resource.getLabelsAsList()}">
                <a class="jenkins-table__link model-link" href="${rootURL}/label/${label}">
                  ${label}
                  <button class="jenkins-menu-dropdown-chevron"></button
                >
                </a>
              </j:forEach>
            </td>

            <!-- **************************************************************
                 Table with assigned properties
            -->
            <td class="jenkins-!-padding-0">
              <j:if test="${resource.properties.size() gt 0}">
                <div class="table-responsive">
                  <table class="jenkins-table jenkins-!-margin-0 table-properties">
                    <tbody>
                     <j:forEach var="property" items="${resource.properties}">
                        <tr>
                          <td>${property.name}</td>
                          <td>${property.value}</td>
                        </tr>
                      </j:forEach>
                    </tbody>
                  </table>
                </div>
              </j:if>
            </td>

            <!-- **************************************************************
                 Action column
            -->
            <td>
              <j:choose>
                <j:when test="${resource.locked}">
                  <l:hasPermission permission="${it.UNLOCK}">
                    <button
                      onClick="resource_action(this, 'unlock');"
                      class="jenkins-button j.jenkins-!-warning-color"
                      tooltip="${%btn.unlock.detail}"
                    >
                      ${%btn.unlock}
                    </button>
                  </l:hasPermission>
                  <l:hasPermission permission="${it.STEAL}">
                    <button
                      onClick="resource_action(this, 'steal');"
                      class="jenkins-button jenkins-!-destructive-color"
                      tooltip="${%btn.steal.detail}"
                    >
                      ${%btn.steal}
                    </button>
                  </l:hasPermission>
                </j:when>
                <j:when test="${resource.reservedBy != null}">
                  <l:hasPermission permission="${it.RESERVE}">
                    <j:if test="${resource.isReservedByCurrentUser() or h.hasPermission(app.ADMINISTER)}">
                      <button
                        onClick="resource_action(this, 'unreserve');"
                        class="jenkins-button jenkins-!-success-color"
                        tooltip="${%btn.unReserve.detail}"
                      >
                        ${%btn.unReserve}
                      </button>
                    </j:if>
                  </l:hasPermission>
                  <l:hasPermission permission="${it.STEAL}">
                    <j:if test="${!resource.isReservedByCurrentUser()}">
                      <button
                        onClick="resource_action(this, 'reassign');"
                        class="jenkins-button jenkins-button--primary"
                        tooltip="${%btn.reassign.detail}"
                      >
                        ${%btn.reassign}
                      </button>
                    </j:if>
                  </l:hasPermission>
                </j:when>
                <j:when test="${resource.queued}">
                  <l:hasPermission permission="${it.UNLOCK}">
                    <button
                      onClick="resource_action(this, 'reset');"
                      class="jenkins-button jenkins-!-destructive-color"
                      tooltip="${%btn.reset.detail}"
                    >
                      ${%btn.reset}
                    </button>
                  </l:hasPermission>
                </j:when>
                <j:otherwise>
                  <l:hasPermission permission="${it.RESERVE}">
                    <button
                      onClick="resource_action(this, 'reserve');"
                      class="jenkins-button jenkins-button--primary"
                      tooltip="${%btn.reserve.detail}"
                    >
                      ${%btn.reserve}
                    </button>
                  </l:hasPermission>
                </j:otherwise>
              </j:choose>
            </td>
          </tr>
        </j:forEach>
      </tbody>
    </table>
  </div>
  <script type="text/javascript" src="${resURL}/plugin/lockable-resources/js/lockable-resources.js"/>



</j:jelly>
